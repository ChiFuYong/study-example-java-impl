<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>study-example-java-impl</artifactId>
        <groupId>com.chifuyong</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>06-maven-plugin-example</artifactId>

    <dependencies>
        <!-- SpringMVC 依赖-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <!-- MySQL数据库驱动 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!-- druid数据库连接池 ，里面依赖了jdk里的jar包-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
        </dependency>
        <!-- 测试 provided ，打包不会被打进去 。-->
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <version>9.0.12</version>
            <scope>provided</scope>
        </dependency>

        <!-- 注：添加此依赖，是为了方便在 assembly 所依赖的 jar 包中
            找到 bin、jar-with-dependencies、project、src.xml 四个内置的 descriptor 打包方式-->
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>3.2.0</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <profiles>
        <!-- 配置 profiles -->
        <profile>
            <id>sit</id>
            <properties>
                <profile.env>sit</profile.env>
            </properties>
        </profile>
        <profile>
            <id>uat</id>
            <properties>
                <profile.env>uat</profile.env>
            </properties>
            <activation>
                <!-- 激活 uat -->
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>pro</id>
            <properties>
                <profile.env>pro</profile.env>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <!-- maven-assembly-plugin 自定义打包貌似无法打可执行 Jar，这里用 maven-jar-plugin 来打可执行jar包-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <useUniqueVersions>false</useUniqueVersions>
                            <mainClass>com.chifuyong.TestDemo</mainClass>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>dependencies/</classpathPrefix>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!-- maven-assembly-plugin 打包配置，使用自定义文件描述来打包 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>assembly-test</id>
                        <!-- 在 package 阶段执行 assembly:single -->
                        <phase>package</phase>
                        <goals>
                            <!-- 在 package 阶段执行 assembly:single -->
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <!-- 打包后的文件名会以 finalName-id (id 为 descriptor xml 的 id ) -->
                            <finalName>${project.artifactId}</finalName>
                            <descriptors>
                                <!-- 自定义描述文件(里面定义了如何打包)的路径 -->
                                <descriptor>assemblies/assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>