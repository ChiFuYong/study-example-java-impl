<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>study-example-java-impl</artifactId>
        <groupId>com.chifuyong</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>06-maven-plugin-example</artifactId>

    <dependencies>
        <!-- SpringMVC 依赖-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>5.2.0.RELEASE</version>
        </dependency>
        <!-- MySQL数据库驱动 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.13</version>
        </dependency>
        <!-- druid数据库连接池 ，里面依赖了jdk里的jar包-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.0.9</version>
        </dependency>
        <!-- 测试 provided ，打包不会被打进去 。-->
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <version>9.0.12</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Maven 打可执行 jar包 配置-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <!--这个属性特别关键，如果没有这个属性，有时候我们引用的包maven库
                               下面可能会有多个包，并且只有一个是正确的，其余的可能是带时间戳的，
                               此时会在classpath下面把那个带时间戳的给添加上去，然后我们
                               在依赖打包的时候，打的是正确的，所以两头会对不上，报错。-->
                            <useUniqueVersions>false</useUniqueVersions>
                            <!-- 指定启动主类（Main-Class）-->
                            <mainClass>com.chifuyong.TestDemo</mainClass>
                            <!-- 在 MANIFEST.MF 加上 Class-Path 项并配置依赖包 -->
                            <addClasspath>true</addClasspath>
                            <!-- 指定依赖包所在目录 -->
                            <classpathPrefix>dependencies/</classpathPrefix>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!-- 可执行jar 相关依赖目录存放配置 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!-- 依赖的jar包输出目录 -->
                            <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
                            <!-- 排除 provide 范围-->
<!--                            <excludeScope>provided</excludeScope>-->
                            <!-- 只包含 runtime -->
                            <includeScope>runtime</includeScope>
                            <useBaseVersion>true</useBaseVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>